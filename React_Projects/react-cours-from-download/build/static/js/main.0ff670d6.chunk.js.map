{"version":3,"sources":["components/header/header.js","components/header/index.js","data/getService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMesage/index.js","components/errorMesage/errorMesage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/app/index.js","components/app/app.js","index.js"],"names":["HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","href","GetService","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getResourse","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","res","some","wrap","_context","prev","next","fetch","concat","_apiBase","sent","ok","Error","status","json","abrupt","stop","_x","apply","arguments","getAllCharacters","_callee2","_context2","map","_transformCharacter","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllHouses","_transformHouse","getHouse","getAllBooks","_transformBook","getBook","char","name","gender","born","died","culture","house","region","words","titles","overlord","ancestralWeapons","book","numberOfPage","publiser","released","Component","Spinner","class","ErrorMessage","RandomChar","getService","state","loading","error","componentDidMount","console","log","updateChare","timeId","setInterval","componentWillUnmount","clearInterval","onCharLoaded","setState","onError","Math","floor","random","then","catch","_this$state","spinner","components_spinner","errorMessage","components_errorMesage","content","randomChar_Vuew","className","Vuew","Fragment","ItemList","charList","renderItems","array","e","n","onClick","onCharSelected","key","items","CharDetails","charId","foo","bar","prevProps","_this$state$char","App","hide","selectedChar","toogleRandomChar","randomChar","components_randomChar","Container","components_header","Row","Col","lg","size","offset","md","components_itemList","components_charDetails","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.0ff670d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 80px;\r\n`;\r\n\r\nconst HeaderTitle = styled.h3`\r\n    font-size: 24px;\r\n    color: #fff;\r\n    margin: 0;\r\n`;\r\n\r\nconst HeaderLinks = styled.ul`\r\n    display: flex;\r\n    margin: 0;\r\n    align-items: center;\r\n    color: #fff;\r\n    list-style-type: none;\r\n    li {\r\n        margin-right: 20px;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderBlock>\r\n            <HeaderTitle>\r\n                <a href=\"#\">\r\n                Game of Thrones DB\r\n                </a>\r\n            </HeaderTitle>\r\n            <HeaderLinks>\r\n                <li>\r\n                    <a href=\"#\">Characters</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Houses</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Books</a>   \r\n                </li>\r\n            </HeaderLinks>\r\n        </HeaderBlock>\r\n    );\r\n};\r\n\r\nexport default Header;","import Header from './header';\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nexport default class GetService extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        //запис в константу початкової силки\r\n        this._apiBase = `https://www.anapioficeandfire.com/api`\r\n    }\r\n    // отримання данних з api в переформатування їх з json в обєкт \r\n    getResourse = async (url) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status ${res.status}`)\r\n        };\r\n        const some = await res.json();\r\n        return some;\r\n    }\r\n    // отримання списка персонажів \r\n    getAllCharacters = async () => {\r\n        const res = await this.getResourse(`/characters?page=7&pageSize=10`)\r\n        return res.map(this._transformCharacter);\r\n    }\r\n    // отримання одного персонажа\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResourse(`/characters/${id}`)\r\n        return this._transformCharacter(res)\r\n    }\r\n    // отримання списка домів\r\n    getAllHouses = () => {\r\n        const res = this.getResourse(`/houses/`)\r\n        return res.map(this._transformHouse)\r\n    }\r\n    // отримання одного дому \r\n    getHouse = (id) => {\r\n        const res = this.getResourse(`/houses/${id}/`)\r\n        return this._transformHouse(res)\r\n    }\r\n    // отримання списка книг\r\n    getAllBooks = () => {\r\n        const res = this.getResourse(`/books/`)\r\n        return res.map(this._transformBook)\r\n    }\r\n    // отримання одної книги \r\n    getBook = (id) => {\r\n        const res = this.getResourse(`/books/${id}/`)\r\n        return this._transformBook(res)\r\n    }\r\n    _transformCharacter(char) {\r\n        return {\r\n            name: char.name,\r\n            gender: char.gender,\r\n            born: char.born,\r\n            died: char.died,\r\n            culture: char.culture\r\n        }\r\n    }\r\n    _transformHouse(house) {\r\n        return {\r\n            name: house.name,\r\n            region: house.region,\r\n            words: house.words,\r\n            titles: house.titles,\r\n            overlord: house.overlord,\r\n            ancestralWeapons: house.ancestralWeapons\r\n        }\r\n    }\r\n    _transformBook(book) {\r\n        return {\r\n            name: book.name,\r\n            numberOfPage: book.numberOfPage,\r\n            publiser: book.publiser,\r\n            released: book.released\r\n        }\r\n    }\r\n}","import Spinner from \"./spinner\";\r\nexport default Spinner;","import React from \"react\"\r\nimport \"./spinner.css\"\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div class=\"loadingio-spinner-spinner-d1hajyc39nt\"><div class=\"ldio-pv1prceky7b\">\r\n            <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n        </div></div>\r\n    )\r\n}\r\nexport default Spinner","import ErrorMessage from \"./errorMesage\";\r\nexport default ErrorMessage;","import React from 'react';\r\nconst ErrorMessage = () => {\r\n    return <h2>Somesthing goes wrong </h2>\r\n}\r\nexport default ErrorMessage","//підгрузка усіх необхідних файлів, компонентів\r\nimport React, { Component } from 'react';\r\nimport './randomChar.css';\r\nimport getService from '../../data/getService';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMesage';\r\n\r\nexport default class RandomChar extends Component {\r\n    // інніціалізація нового обєкту з отриманими данними з беку \r\n    getService = new getService();\r\n\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n\r\n    }\r\n    //функції житєвого циклу \r\n    componentDidMount = () => {\r\n        console.log(\"Mount\")\r\n        this.updateChare()\r\n        this.timeId = setInterval(this.updateChare, 4000)\r\n\r\n    }\r\n    componentWillUnmount = () => {\r\n        clearInterval(this.timeId)\r\n    }\r\n    // функція запису в state персонажа \r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        })\r\n    }\r\n    // функція запису в state помилки \r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n    // отримання рандомного персонажа \r\n    updateChare = () => {\r\n        console.log(\"Updata\")\r\n        // рандомне число від 25 до 100\r\n        let id = Math.floor(Math.random() * 100 + 25);\r\n        // сам певний персонаж \r\n        return this.getService.getCharacter(id)\r\n            // обновлення state для ререндерингу\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n\r\n    }\r\n\r\n    render() {\r\n        // витягування в константи данних зі state \r\n        const { char, loading, error } = this.state;\r\n\r\n        // якщо іде загрузка, прогрузка то появляється спінер, якщо ні то ніц\r\n        const spinner = loading ? <Spinner /> : null\r\n        // якщо є помилка, зявляється повідомлення про помилку \r\n        const errorMessage = error ? <ErrorMessage /> : null;\r\n        // якщо нема помилки або загрузки, то зявляється верстка з потрібними данними\r\n        const content = !(loading || error) ? <Vuew char={char} /> : null;\r\n\r\n        return (\r\n            <div className=\"random-block rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// функція рендерингу html з данними рандомного персонажа\r\nconst Vuew = ({ char }) => {\r\n    // витягування в константи данних зі пропсів \r\n    const { name, gender, born, died, culture } = char;\r\n    return (\r\n        <>\r\n            <h4>Random Character: {name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Gender </span>\r\n                    <span>{gender}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Born </span>\r\n                    <span>{born}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Died </span>\r\n                    <span>{died}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Culture </span>\r\n                    <span>{culture}</span>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}","import RandomChar from './randomChar';\r\n\r\nexport default RandomChar;","import ItemList from './itemList';\r\n\r\nexport default ItemList;","import React, { Component } from 'react';\r\nimport './itemList.css';\r\nimport getService from '../../data/getService';\r\nimport Spinner from '../spinner';\r\nexport default class ItemList extends Component {\r\n    getService = new getService();\r\n\r\n    state = {\r\n        charList: null\r\n    }\r\n    componentDidMount = () => {\r\n        this.getService.getAllCharacters()\r\n            .then(charList => {\r\n                this.setState({\r\n                    charList\r\n                })\r\n            })\r\n    }\r\n    renderItems = (array) => {\r\n        return array.map((e, n) => {\r\n            return (\r\n                <li\r\n                    onClick={() => this.props.onCharSelected(41 + n)}\r\n                    key={n}\r\n                    className=\"list-group-item\"\r\n                >\r\n                    {e.name}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n        const { charList } = this.state;\r\n        if (!charList) {\r\n            return <Spinner />\r\n        }\r\n        const items = this.renderItems(charList);\r\n        return (\r\n            <ul className=\"item-list list-group\">\r\n                {items}\r\n            </ul>\r\n        );\r\n    }\r\n}","import CharDetails from './charDetails';\r\nexport default CharDetails;","import React, { Component } from 'react';\r\nimport './charDetails.css';\r\nimport getService from '../../data/getService';\r\nexport default class CharDetails extends Component {\r\n    getService = new getService();\r\n    state = {\r\n        char: null,\r\n    }\r\n    componentDidMount() {\r\n        this.updateChare();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChare();\r\n        }\r\n    }\r\n\r\n    updateChare = () => {\r\n        const { charId } = this.props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n        this.getService.getCharacter(charId)\r\n            .then((char) => {\r\n                this.setState({ char })\r\n            })\r\n        this.foo.bar = 0;\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.state.char) {\r\n            return <span className='select-error'>Please select character</span>;\r\n        };\r\n        const { name, gender, born, died, culture } = this.state.char;\r\n        console.log(this.state.char)\r\n        return (\r\n            <div className=\"char-details rounded\">\r\n                <h4>{name}</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Gender</span>\r\n                        <span>{gender}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Born</span>\r\n                        <span>{born}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Died</span>\r\n                        <span>{died}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <span className=\"term\">Culture</span>\r\n                        <span>{culture}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { Col, Row, Container } from 'reactstrap';\r\nimport Header from '../header';\r\nimport RandomChar from '../randomChar';\r\nimport ItemList from '../itemList';\r\nimport CharDetails from '../charDetails';\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        hide: false,\r\n        selectedChar: 130,\r\n    }\r\n\r\n    toogleRandomChar = () => {\r\n        this.setState({\r\n            hide: !this.state.hide\r\n        })\r\n    }\r\n    onCharSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n    render() {\r\n        const { hide } = this.state\r\n        const randomChar = !hide ? <RandomChar /> : null;\r\n\r\n\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <Header />\r\n                </Container>\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={{ size: 5, offset: 0 }}>\r\n                            {randomChar}\r\n                            <button onClick={this.toogleRandomChar}>Toggle  char</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md='6'>\r\n                            <ItemList onCharSelected={this.onCharSelected} />\r\n                        </Col>\r\n                        <Col md='6'>\r\n                            <CharDetails charId={this.state.selectedChar} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}